/**
 * WebAPI
 * Access Sponge powered Minecraft servers through a WebAPI  #/ Introduction This is the documentation of the various API routes offered by the WebAPI plugin.  This documentation assumes that you are familiar with the basic concepts of Web API's, such as `GET`, `PUT`, `POST` and `DELETE` methods, request `HEADERS` and `RESPONSE CODES` and `JSON` data.  By default this documentation can be found at http:/localhost:8080 (while your minecraft server is running) and the various routes start with http:/localhost:8080/api/...  As a quick test try reaching the route http:/localhost:8080/api/info (remember that you can only access \"localhost\" routes on the server on which you are running minecraft). This route should show you basic information about your server, like the motd and player count.  #/ Additional data Certain endpoints (such as `/player`, `/entity` and `/tile-entity` have additional properties which are not documented here, because the data depends on the concrete object type (eg. `Sheep` have a wool color, others do not) and on the other plugins/mods that are running on your server which might add additional data.  You can also find more information in the github docs (https:/github.com/Valandur/Web-API/tree/master/docs/DATA.md) 
 *
 * OpenAPI spec version: <version>
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.BlockFull;
import io.swagger.client.model.Vector3;
import java.util.ArrayList;
import java.util.List;


/**
 * BlockOperationNew
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-09T12:59:04.867+02:00")
public class BlockOperationNew   {
  /**
   * The type of action to perform. `GET` to fetch world blocks, `UPDATE` to change world blocks.
   */
  public enum TypeEnum {
    @SerializedName("GET")
    GET("GET"),
    
    @SerializedName("UPDATE")
    UPDATE("UPDATE");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("world")
  private String world = null;

  @SerializedName("min")
  private Vector3 min = null;

  @SerializedName("max")
  private Vector3 max = null;

  @SerializedName("block")
  private BlockFull block = null;

  @SerializedName("blocks")
  private List<List<List<BlockFull>>> blocks = new ArrayList<List<List<BlockFull>>>();

  public BlockOperationNew type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * The type of action to perform. `GET` to fetch world blocks, `UPDATE` to change world blocks.
   * @return type
  **/
  @ApiModelProperty(example = "null", required = true, value = "The type of action to perform. `GET` to fetch world blocks, `UPDATE` to change world blocks.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public BlockOperationNew world(String world) {
    this.world = world;
    return this;
  }

   /**
   * The UUID of the world that the block update is applied to.  Either the property `block` or `blocks` has to be set.  If the property `block` is set then all the blocks within the area defined by `min` and `max` are changed to the specified block.  If the property `blocks` is set then it defines nested arrays of the blocks within the area defined by `min` and `max`. The arrays should contain the blocks such that a block located at [min.X + x, min.Y + y, min.Z + z] can be accessed by `blocks[x][y][z]`, where `min` is the vecotor defined by the `min` property. 
   * @return world
  **/
  @ApiModelProperty(example = "null", required = true, value = "The UUID of the world that the block update is applied to.  Either the property `block` or `blocks` has to be set.  If the property `block` is set then all the blocks within the area defined by `min` and `max` are changed to the specified block.  If the property `blocks` is set then it defines nested arrays of the blocks within the area defined by `min` and `max`. The arrays should contain the blocks such that a block located at [min.X + x, min.Y + y, min.Z + z] can be accessed by `blocks[x][y][z]`, where `min` is the vecotor defined by the `min` property. ")
  public String getWorld() {
    return world;
  }

  public void setWorld(String world) {
    this.world = world;
  }

  public BlockOperationNew min(Vector3 min) {
    this.min = min;
    return this;
  }

   /**
   * Get min
   * @return min
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public Vector3 getMin() {
    return min;
  }

  public void setMin(Vector3 min) {
    this.min = min;
  }

  public BlockOperationNew max(Vector3 max) {
    this.max = max;
    return this;
  }

   /**
   * Get max
   * @return max
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public Vector3 getMax() {
    return max;
  }

  public void setMax(Vector3 max) {
    this.max = max;
  }

  public BlockOperationNew block(BlockFull block) {
    this.block = block;
    return this;
  }

   /**
   * Get block
   * @return block
  **/
  @ApiModelProperty(example = "null", value = "")
  public BlockFull getBlock() {
    return block;
  }

  public void setBlock(BlockFull block) {
    this.block = block;
  }

  public BlockOperationNew blocks(List<List<List<BlockFull>>> blocks) {
    this.blocks = blocks;
    return this;
  }

  public BlockOperationNew addBlocksItem(List<List<BlockFull>> blocksItem) {
    this.blocks.add(blocksItem);
    return this;
  }

   /**
   * Get blocks
   * @return blocks
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<List<List<BlockFull>>> getBlocks() {
    return blocks;
  }

  public void setBlocks(List<List<List<BlockFull>>> blocks) {
    this.blocks = blocks;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BlockOperationNew blockOperationNew = (BlockOperationNew) o;
    return Objects.equals(this.type, blockOperationNew.type) &&
        Objects.equals(this.world, blockOperationNew.world) &&
        Objects.equals(this.min, blockOperationNew.min) &&
        Objects.equals(this.max, blockOperationNew.max) &&
        Objects.equals(this.block, blockOperationNew.block) &&
        Objects.equals(this.blocks, blockOperationNew.blocks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, world, min, max, block, blocks);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BlockOperationNew {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    world: ").append(toIndentedString(world)).append("\n");
    sb.append("    min: ").append(toIndentedString(min)).append("\n");
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("    block: ").append(toIndentedString(block)).append("\n");
    sb.append("    blocks: ").append(toIndentedString(blocks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

