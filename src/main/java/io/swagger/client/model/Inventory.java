/**
 * WebAPI
 * Access Sponge powered Minecraft servers through a WebAPI  #/ Introduction This is the documentation of the various API routes offered by the WebAPI plugin.  This documentation assumes that you are familiar with the basic concepts of Web API's, such as `GET`, `PUT`, `POST` and `DELETE` methods, request `HEADERS` and `RESPONSE CODES` and `JSON` data.  By default this documentation can be found at http:/localhost:8080 (while your minecraft server is running) and the various routes start with http:/localhost:8080/api/...  As a quick test try reaching the route http:/localhost:8080/api/info (remember that you can only access \"localhost\" routes on the server on which you are running minecraft). This route should show you basic information about your server, like the motd and player count.  #/ Additional data Certain endpoints (such as `/player`, `/entity` and `/tile-entity` have additional properties which are not documented here, because the data depends on the concrete object type (eg. `Sheep` have a wool color, others do not) and on the other plugins/mods that are running on your server which might add additional data.  You can also find more information in the github docs (https:/github.com/Valandur/Web-API/tree/master/docs/DATA.md) 
 *
 * OpenAPI spec version: <version>
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ItemStack;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;


/**
 * A collection of item stacks.
 */
@ApiModel(description = "A collection of item stacks.")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-09T12:59:04.867+02:00")
public class Inventory   {
  @SerializedName("name")
  private String name = null;

  @SerializedName("stackCount")
  private BigDecimal stackCount = null;

  @SerializedName("itemCount")
  private BigDecimal itemCount = null;

  @SerializedName("items")
  private List<ItemStack> items = new ArrayList<ItemStack>();

  public Inventory name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the inventory.
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "The name of the inventory.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Inventory stackCount(BigDecimal stackCount) {
    this.stackCount = stackCount;
    return this;
  }

   /**
   * The amount of different stacks in the inventory.
   * @return stackCount
  **/
  @ApiModelProperty(example = "null", value = "The amount of different stacks in the inventory.")
  public BigDecimal getStackCount() {
    return stackCount;
  }

  public void setStackCount(BigDecimal stackCount) {
    this.stackCount = stackCount;
  }

  public Inventory itemCount(BigDecimal itemCount) {
    this.itemCount = itemCount;
    return this;
  }

   /**
   * The total amount of items in the inventory.
   * @return itemCount
  **/
  @ApiModelProperty(example = "null", value = "The total amount of items in the inventory.")
  public BigDecimal getItemCount() {
    return itemCount;
  }

  public void setItemCount(BigDecimal itemCount) {
    this.itemCount = itemCount;
  }

  public Inventory items(List<ItemStack> items) {
    this.items = items;
    return this;
  }

  public Inventory addItemsItem(ItemStack itemsItem) {
    this.items.add(itemsItem);
    return this;
  }

   /**
   * The item stacks in the inventory
   * @return items
  **/
  @ApiModelProperty(example = "null", value = "The item stacks in the inventory")
  public List<ItemStack> getItems() {
    return items;
  }

  public void setItems(List<ItemStack> items) {
    this.items = items;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Inventory inventory = (Inventory) o;
    return Objects.equals(this.name, inventory.name) &&
        Objects.equals(this.stackCount, inventory.stackCount) &&
        Objects.equals(this.itemCount, inventory.itemCount) &&
        Objects.equals(this.items, inventory.items);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, stackCount, itemCount, items);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Inventory {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    stackCount: ").append(toIndentedString(stackCount)).append("\n");
    sb.append("    itemCount: ").append(toIndentedString(itemCount)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

