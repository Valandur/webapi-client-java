/*
 * Web-API
 * Access Sponge powered Minecraft servers through a WebAPI  # Introduction This is the documentation of the various API routes offered by the WebAPI plugin.  This documentation assumes that you are familiar with the basic concepts of Web API's, such as `GET`, `PUT`, `POST` and `DELETE` methods, request `HEADERS` and `RESPONSE CODES` and `JSON` data.  By default this documentation can be found at http:/localhost:8080 (while your minecraft server is running) and the various routes start with http:/localhost:8080/api/v5...  As a quick test try reaching the route http:/localhost:8080/api/v5/info (remember that you can only access \\\"localhost\\\" routes on the server on which you are running minecraft). This route should show you basic information about your server, like the motd and player count.  # List endpoints Lots of objects offer an endpoint to list all objects (e.g. `GET: /world` to get all worlds). These endpoints return only the properties marked 'required' by default, because the list might be quite large. If you want to return ALL data for a list endpoint add the query parameter `details`, (e.g. `GET: /world?details`).  > Remember that in this case the data returned by the endpoint might be quite large.  # Debugging endpoints Apart from the `?details` flag you can also pass some other flags for debugging purposes. Remember that you must include the first query parameter with `?`, and further ones with `&`:  `details`: Includes details for list endpoints  `accept=[json/xml]`: Manually set the accept content type. This is good for browser testing, **BUT DON'T USE THIS IN PRODUCTION, YOU CAN SUPPLY THE `Accepts` HEADER FOR THAT**  `pretty`: Pretty prints the data, also good for debugging in the browser.  An example request might look like this: `http://localhost:8080/api/v5/world?details&accpet=json&pretty&key=MY-API-KEY`  # Additional data Certain endpoints (such as `/player`, `/entity` and `/tile-entity` have additional properties which are not documented here, because the data depends on the concrete object type (eg. `Sheep` have a wool color, others do not) and on the other plugins/mods that are running on your server which might add additional data.  You can also find more information in the github docs (https:/github.com/Valandur/Web-API/tree/master/docs/DATA.md)
 *
 * OpenAPI spec version: 5.4.2-S7.1.0
 * Contact: inithilian@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CommandResult
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-23T12:56:27.838+02:00")
public class CommandResult {
  @SerializedName("affectedBlocks")
  private Integer affectedBlocks = null;

  @SerializedName("affectedEntities")
  private Integer affectedEntities = null;

  @SerializedName("affectedItems")
  private Integer affectedItems = null;

  @SerializedName("queryResult")
  private Integer queryResult = null;

  @SerializedName("successCount")
  private Integer successCount = null;

  public CommandResult affectedBlocks(Integer affectedBlocks) {
    this.affectedBlocks = affectedBlocks;
    return this;
  }

   /**
   * The number of blocks that were affected by this command
   * @return affectedBlocks
  **/
  @ApiModelProperty(value = "The number of blocks that were affected by this command")
  public Integer getAffectedBlocks() {
    return affectedBlocks;
  }

  public void setAffectedBlocks(Integer affectedBlocks) {
    this.affectedBlocks = affectedBlocks;
  }

  public CommandResult affectedEntities(Integer affectedEntities) {
    this.affectedEntities = affectedEntities;
    return this;
  }

   /**
   * The number of entities that were affected by this command
   * @return affectedEntities
  **/
  @ApiModelProperty(value = "The number of entities that were affected by this command")
  public Integer getAffectedEntities() {
    return affectedEntities;
  }

  public void setAffectedEntities(Integer affectedEntities) {
    this.affectedEntities = affectedEntities;
  }

  public CommandResult affectedItems(Integer affectedItems) {
    this.affectedItems = affectedItems;
    return this;
  }

   /**
   * The number of items that were affected by this command
   * @return affectedItems
  **/
  @ApiModelProperty(value = "The number of items that were affected by this command")
  public Integer getAffectedItems() {
    return affectedItems;
  }

  public void setAffectedItems(Integer affectedItems) {
    this.affectedItems = affectedItems;
  }

  public CommandResult queryResult(Integer queryResult) {
    this.queryResult = queryResult;
    return this;
  }

   /**
   * The results of the query
   * @return queryResult
  **/
  @ApiModelProperty(value = "The results of the query")
  public Integer getQueryResult() {
    return queryResult;
  }

  public void setQueryResult(Integer queryResult) {
    this.queryResult = queryResult;
  }

  public CommandResult successCount(Integer successCount) {
    this.successCount = successCount;
    return this;
  }

   /**
   * The success count
   * @return successCount
  **/
  @ApiModelProperty(value = "The success count")
  public Integer getSuccessCount() {
    return successCount;
  }

  public void setSuccessCount(Integer successCount) {
    this.successCount = successCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommandResult commandResult = (CommandResult) o;
    return Objects.equals(this.affectedBlocks, commandResult.affectedBlocks) &&
        Objects.equals(this.affectedEntities, commandResult.affectedEntities) &&
        Objects.equals(this.affectedItems, commandResult.affectedItems) &&
        Objects.equals(this.queryResult, commandResult.queryResult) &&
        Objects.equals(this.successCount, commandResult.successCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affectedBlocks, affectedEntities, affectedItems, queryResult, successCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommandResult {\n");
    
    sb.append("    affectedBlocks: ").append(toIndentedString(affectedBlocks)).append("\n");
    sb.append("    affectedEntities: ").append(toIndentedString(affectedEntities)).append("\n");
    sb.append("    affectedItems: ").append(toIndentedString(affectedItems)).append("\n");
    sb.append("    queryResult: ").append(toIndentedString(queryResult)).append("\n");
    sb.append("    successCount: ").append(toIndentedString(successCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

