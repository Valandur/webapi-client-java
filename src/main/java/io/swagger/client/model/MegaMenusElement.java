/*
 * Web-API
 * Access Sponge powered Minecraft servers through a WebAPI  # Introduction This is the documentation of the various API routes offered by the WebAPI plugin.  This documentation assumes that you are familiar with the basic concepts of Web API's, such as `GET`, `PUT`, `POST` and `DELETE` methods, request `HEADERS` and `RESPONSE CODES` and `JSON` data.  By default this documentation can be found at http:/localhost:8080 (while your minecraft server is running) and the various routes start with http:/localhost:8080/api/v5...  As a quick test try reaching the route http:/localhost:8080/api/v5/info (remember that you can only access \\\"localhost\\\" routes on the server on which you are running minecraft). This route should show you basic information about your server, like the motd and player count.  # List endpoints Lots of objects offer an endpoint to list all objects (e.g. `GET: /world` to get all worlds). These endpoints return only the properties marked 'required' by default, because the list might be quite large. If you want to return ALL data for a list endpoint add the query parameter `details`, (e.g. `GET: /world?details`).  > Remember that in this case the data returned by the endpoint might be quite large.  # Debugging endpoints Apart from the `?details` flag you can also pass some other flags for debugging purposes. Remember that you must include the first query parameter with `?`, and further ones with `&`:  `details`: Includes details for list endpoints  `accept=[json/xml]`: Manually set the accept content type. This is good for browser testing, **BUT DON'T USE THIS IN PRODUCTION, YOU CAN SUPPLY THE `Accepts` HEADER FOR THAT**  `pretty`: Pretty prints the data, also good for debugging in the browser.  An example request might look like this: `http://localhost:8080/api/v5/world?details&accpet=json&pretty&key=MY-API-KEY`  # Additional data Certain endpoints (such as `/player`, `/entity` and `/tile-entity` have additional properties which are not documented here, because the data depends on the concrete object type (eg. `Sheep` have a wool color, others do not) and on the other plugins/mods that are running on your server which might add additional data.  You can also find more information in the github docs (https:/github.com/Valandur/Web-API/tree/master/docs/DATA.md)
 *
 * OpenAPI spec version: 5.4.2-S7.1.0
 * Contact: inithilian@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ItemStack;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * MegaMenusElement
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-23T12:56:27.838+02:00")
public class MegaMenusElement {
  @SerializedName("link")
  private String link = null;

  @SerializedName("access")
  private Integer access = null;

  @SerializedName("icon")
  private ItemStack icon = null;

  @SerializedName("lore")
  private List<String> lore = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("type")
  private String type = null;

   /**
   * The API link that can be used to obtain more information about this object
   * @return link
  **/
  @ApiModelProperty(required = true, value = "The API link that can be used to obtain more information about this object")
  public String getLink() {
    return link;
  }

  public MegaMenusElement access(Integer access) {
    this.access = access;
    return this;
  }

   /**
   * Access properties applicable to MSlot type elements
   * @return access
  **/
  @ApiModelProperty(value = "Access properties applicable to MSlot type elements")
  public Integer getAccess() {
    return access;
  }

  public void setAccess(Integer access) {
    this.access = access;
  }

  public MegaMenusElement icon(ItemStack icon) {
    this.icon = icon;
    return this;
  }

   /**
   * Icon for this element
   * @return icon
  **/
  @ApiModelProperty(value = "Icon for this element")
  public ItemStack getIcon() {
    return icon;
  }

  public void setIcon(ItemStack icon) {
    this.icon = icon;
  }

  public MegaMenusElement lore(List<String> lore) {
    this.lore = lore;
    return this;
  }

  public MegaMenusElement addLoreItem(String loreItem) {
    if (this.lore == null) {
      this.lore = new ArrayList<String>();
    }
    this.lore.add(loreItem);
    return this;
  }

   /**
   * The lore or values of this element, displayed in the item tooltip as lore
   * @return lore
  **/
  @ApiModelProperty(value = "The lore or values of this element, displayed in the item tooltip as lore")
  public List<String> getLore() {
    return lore;
  }

  public void setLore(List<String> lore) {
    this.lore = lore;
  }

  public MegaMenusElement name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of this element, displayed as item name
   * @return name
  **/
  @ApiModelProperty(value = "The name of this element, displayed as item name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public MegaMenusElement type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The type of this element
   * @return type
  **/
  @ApiModelProperty(value = "The type of this element")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MegaMenusElement megaMenusElement = (MegaMenusElement) o;
    return Objects.equals(this.link, megaMenusElement.link) &&
        Objects.equals(this.access, megaMenusElement.access) &&
        Objects.equals(this.icon, megaMenusElement.icon) &&
        Objects.equals(this.lore, megaMenusElement.lore) &&
        Objects.equals(this.name, megaMenusElement.name) &&
        Objects.equals(this.type, megaMenusElement.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(link, access, icon, lore, name, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MegaMenusElement {\n");
    
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    access: ").append(toIndentedString(access)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    lore: ").append(toIndentedString(lore)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

