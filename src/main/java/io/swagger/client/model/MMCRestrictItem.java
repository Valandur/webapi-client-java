/*
 * Web-API
 * Access Sponge powered Minecraft servers through a WebAPI  # Introduction This is the documentation of the various API routes offered by the WebAPI plugin.  This documentation assumes that you are familiar with the basic concepts of Web API's, such as `GET`, `PUT`, `POST` and `DELETE` methods, request `HEADERS` and `RESPONSE CODES` and `JSON` data.  By default this documentation can be found at http:/localhost:8080 (while your minecraft server is running) and the various routes start with http:/localhost:8080/api/v5...  As a quick test try reaching the route http:/localhost:8080/api/v5/info (remember that you can only access \\\"localhost\\\" routes on the server on which you are running minecraft). This route should show you basic information about your server, like the motd and player count.  # List endpoints Lots of objects offer an endpoint to list all objects (e.g. `GET: /world` to get all worlds). These endpoints return only the properties marked 'required' by default, because the list might be quite large. If you want to return ALL data for a list endpoint add the query parameter `details`, (e.g. `GET: /world?details`).  > Remember that in this case the data returned by the endpoint might be quite large.  # Debugging endpoints Apart from the `?details` flag you can also pass some other flags for debugging purposes. Remember that you must include the first query parameter with `?`, and further ones with `&`:  `details`: Includes details for list endpoints  `accept=[json/xml]`: Manually set the accept content type. This is good for browser testing, **BUT DON'T USE THIS IN PRODUCTION, YOU CAN SUPPLY THE `Accepts` HEADER FOR THAT**  `pretty`: Pretty prints the data, also good for debugging in the browser.  An example request might look like this: `http://localhost:8080/api/v5/world?details&accpet=json&pretty&key=MY-API-KEY`  # Additional data Certain endpoints (such as `/player`, `/entity` and `/tile-entity` have additional properties which are not documented here, because the data depends on the concrete object type (eg. `Sheep` have a wool color, others do not) and on the other plugins/mods that are running on your server which might add additional data.  You can also find more information in the github docs (https:/github.com/Valandur/Web-API/tree/master/docs/DATA.md)
 *
 * OpenAPI spec version: @version@
 * Contact: inithilian@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CatalogTypeItemType;
import java.io.IOException;

/**
 * MMCRestrictItem
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-14T13:42:56.227+02:00")
public class MMCRestrictItem {
  @SerializedName("banReason")
  private String banReason = null;

  @SerializedName("breakingBanned")
  private Boolean breakingBanned = null;

  @SerializedName("dropBanned")
  private Boolean dropBanned = null;

  @SerializedName("item")
  private CatalogTypeItemType item = null;

  @SerializedName("link")
  private String link = null;

  @SerializedName("ownershipBanned")
  private Boolean ownershipBanned = null;

  @SerializedName("placingBanned")
  private Boolean placingBanned = null;

  @SerializedName("usageBanned")
  private Boolean usageBanned = null;

  @SerializedName("worldBanned")
  private Boolean worldBanned = null;

  public MMCRestrictItem banReason(String banReason) {
    this.banReason = banReason;
    return this;
  }

   /**
   * The reason why the item is banned
   * @return banReason
  **/
  @ApiModelProperty(required = true, value = "The reason why the item is banned")
  public String getBanReason() {
    return banReason;
  }

  public void setBanReason(String banReason) {
    this.banReason = banReason;
  }

  public MMCRestrictItem breakingBanned(Boolean breakingBanned) {
    this.breakingBanned = breakingBanned;
    return this;
  }

   /**
   * True if breaking of this item is banned, false otherwise
   * @return breakingBanned
  **/
  @ApiModelProperty(required = true, value = "True if breaking of this item is banned, false otherwise")
  public Boolean isBreakingBanned() {
    return breakingBanned;
  }

  public void setBreakingBanned(Boolean breakingBanned) {
    this.breakingBanned = breakingBanned;
  }

  public MMCRestrictItem dropBanned(Boolean dropBanned) {
    this.dropBanned = dropBanned;
    return this;
  }

   /**
   * True if dropping this item is banned, false otherwise
   * @return dropBanned
  **/
  @ApiModelProperty(required = true, value = "True if dropping this item is banned, false otherwise")
  public Boolean isDropBanned() {
    return dropBanned;
  }

  public void setDropBanned(Boolean dropBanned) {
    this.dropBanned = dropBanned;
  }

  public MMCRestrictItem item(CatalogTypeItemType item) {
    this.item = item;
    return this;
  }

   /**
   * The item type that is banned
   * @return item
  **/
  @ApiModelProperty(required = true, value = "The item type that is banned")
  public CatalogTypeItemType getItem() {
    return item;
  }

  public void setItem(CatalogTypeItemType item) {
    this.item = item;
  }

   /**
   * The API link that can be used to obtain more information about this object
   * @return link
  **/
  @ApiModelProperty(required = true, value = "The API link that can be used to obtain more information about this object")
  public String getLink() {
    return link;
  }

  public MMCRestrictItem ownershipBanned(Boolean ownershipBanned) {
    this.ownershipBanned = ownershipBanned;
    return this;
  }

   /**
   * True if ownership of this item is banned, false otherwise
   * @return ownershipBanned
  **/
  @ApiModelProperty(required = true, value = "True if ownership of this item is banned, false otherwise")
  public Boolean isOwnershipBanned() {
    return ownershipBanned;
  }

  public void setOwnershipBanned(Boolean ownershipBanned) {
    this.ownershipBanned = ownershipBanned;
  }

  public MMCRestrictItem placingBanned(Boolean placingBanned) {
    this.placingBanned = placingBanned;
    return this;
  }

   /**
   * True if the placing of this item is banned, false otherwise
   * @return placingBanned
  **/
  @ApiModelProperty(required = true, value = "True if the placing of this item is banned, false otherwise")
  public Boolean isPlacingBanned() {
    return placingBanned;
  }

  public void setPlacingBanned(Boolean placingBanned) {
    this.placingBanned = placingBanned;
  }

  public MMCRestrictItem usageBanned(Boolean usageBanned) {
    this.usageBanned = usageBanned;
    return this;
  }

   /**
   * True if the usage of this item is banned, false otherwise
   * @return usageBanned
  **/
  @ApiModelProperty(required = true, value = "True if the usage of this item is banned, false otherwise")
  public Boolean isUsageBanned() {
    return usageBanned;
  }

  public void setUsageBanned(Boolean usageBanned) {
    this.usageBanned = usageBanned;
  }

  public MMCRestrictItem worldBanned(Boolean worldBanned) {
    this.worldBanned = worldBanned;
    return this;
  }

   /**
   * True if this item is banned from the world, false otherwise?
   * @return worldBanned
  **/
  @ApiModelProperty(required = true, value = "True if this item is banned from the world, false otherwise?")
  public Boolean isWorldBanned() {
    return worldBanned;
  }

  public void setWorldBanned(Boolean worldBanned) {
    this.worldBanned = worldBanned;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MMCRestrictItem mmCRestrictItem = (MMCRestrictItem) o;
    return Objects.equals(this.banReason, mmCRestrictItem.banReason) &&
        Objects.equals(this.breakingBanned, mmCRestrictItem.breakingBanned) &&
        Objects.equals(this.dropBanned, mmCRestrictItem.dropBanned) &&
        Objects.equals(this.item, mmCRestrictItem.item) &&
        Objects.equals(this.link, mmCRestrictItem.link) &&
        Objects.equals(this.ownershipBanned, mmCRestrictItem.ownershipBanned) &&
        Objects.equals(this.placingBanned, mmCRestrictItem.placingBanned) &&
        Objects.equals(this.usageBanned, mmCRestrictItem.usageBanned) &&
        Objects.equals(this.worldBanned, mmCRestrictItem.worldBanned);
  }

  @Override
  public int hashCode() {
    return Objects.hash(banReason, breakingBanned, dropBanned, item, link, ownershipBanned, placingBanned, usageBanned, worldBanned);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MMCRestrictItem {\n");
    
    sb.append("    banReason: ").append(toIndentedString(banReason)).append("\n");
    sb.append("    breakingBanned: ").append(toIndentedString(breakingBanned)).append("\n");
    sb.append("    dropBanned: ").append(toIndentedString(dropBanned)).append("\n");
    sb.append("    item: ").append(toIndentedString(item)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    ownershipBanned: ").append(toIndentedString(ownershipBanned)).append("\n");
    sb.append("    placingBanned: ").append(toIndentedString(placingBanned)).append("\n");
    sb.append("    usageBanned: ").append(toIndentedString(usageBanned)).append("\n");
    sb.append("    worldBanned: ").append(toIndentedString(worldBanned)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

