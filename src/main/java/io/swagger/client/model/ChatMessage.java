/*
 * WebAPI
 * Access Sponge powered Minecraft servers through a WebAPI  # Introduction This is the documentation of the various API routes offered by the WebAPI plugin.  This documentation assumes that you are familiar with the basic concepts of Web API's, such as `GET`, `PUT`, `POST` and `DELETE` methods, request `HEADERS` and `RESPONSE CODES` and `JSON` data.  By default this documentation can be found at http:/localhost:8080 (while your minecraft server is running) and the various routes start with http:/localhost:8080/api/...  As a quick test try reaching the route http:/localhost:8080/api/info (remember that you can only access \"localhost\" routes on the server on which you are running minecraft). This route should show you basic information about your server, like the motd and player count.  # Additional data Certain endpoints (such as `/player`, `/entity` and `/tile-entity` have additional properties which are not documented here, because the data depends on the concrete object type (eg. `Sheep` have a wool color, others do not) and on the other plugins/mods that are running on your server which might add additional data.  You can also find more information in the github docs (https:/github.com/Valandur/Web-API/tree/master/docs/DATA.md) 
 *
 * OpenAPI spec version: <version>
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ChatMessage
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-09T21:04:49.224+02:00")
public class ChatMessage {
  @SerializedName("timestamp")
  private String timestamp = null;

  @SerializedName("sender")
  private String sender = null;

  @SerializedName("message")
  private String message = null;

  @SerializedName("wasCancelled")
  private Boolean wasCancelled = null;

  public ChatMessage timestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * The timestamp when the message was sent (server time).
   * @return timestamp
  **/
  @ApiModelProperty(value = "The timestamp when the message was sent (server time).")
  public String getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }

  public ChatMessage sender(String sender) {
    this.sender = sender;
    return this;
  }

   /**
   * The name of the player that sent the message.
   * @return sender
  **/
  @ApiModelProperty(value = "The name of the player that sent the message.")
  public String getSender() {
    return sender;
  }

  public void setSender(String sender) {
    this.sender = sender;
  }

  public ChatMessage message(String message) {
    this.message = message;
    return this;
  }

   /**
   * The message that was sent.
   * @return message
  **/
  @ApiModelProperty(value = "The message that was sent.")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public ChatMessage wasCancelled(Boolean wasCancelled) {
    this.wasCancelled = wasCancelled;
    return this;
  }

   /**
   * True if the execution of the command was cancelled.
   * @return wasCancelled
  **/
  @ApiModelProperty(value = "True if the execution of the command was cancelled.")
  public Boolean getWasCancelled() {
    return wasCancelled;
  }

  public void setWasCancelled(Boolean wasCancelled) {
    this.wasCancelled = wasCancelled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChatMessage chatMessage = (ChatMessage) o;
    return Objects.equals(this.timestamp, chatMessage.timestamp) &&
        Objects.equals(this.sender, chatMessage.sender) &&
        Objects.equals(this.message, chatMessage.message) &&
        Objects.equals(this.wasCancelled, chatMessage.wasCancelled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timestamp, sender, message, wasCancelled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChatMessage {\n");
    
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    sender: ").append(toIndentedString(sender)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    wasCancelled: ").append(toIndentedString(wasCancelled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

