/**
 * WebAPI
 * Access Sponge powered Minecraft servers through a WebAPI  #/ Introduction This is the documentation of the various API routes offered by the WebAPI plugin.  This documentation assumes that you are familiar with the basic concepts of Web API's, such as `GET`, `PUT`, `POST` and `DELETE` methods, request `HEADERS` and `RESPONSE CODES` and `JSON` data.  By default this documentation can be found at http:/localhost:8080 (while your minecraft server is running) and the various routes start with http:/localhost:8080/api/...  As a quick test try reaching the route http:/localhost:8080/api/info (remember that you can only access \"localhost\" routes on the server on which you are running minecraft). This route should show you basic information about your server, like the motd and player count.  #/ Additional data Certain endpoints (such as `/player`, `/entity` and `/tile-entity` have additional properties which are not documented here, because the data depends on the concrete object type (eg. `Sheep` have a wool color, others do not) and on the other plugins/mods that are running on your server which might add additional data.  You can also find more information in the github docs (https:/github.com/Valandur/Web-API/tree/master/docs/DATA.md) 
 *
 * OpenAPI spec version: <version>
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Vector3;
import io.swagger.client.model.World;
import java.math.BigDecimal;


/**
 * WorldFull
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-09T12:59:04.867+02:00")
public class WorldFull   {
  @SerializedName("border")
  private Object border = null;

  @SerializedName("difficulty")
  private String difficulty = null;

  @SerializedName("dimension")
  private Object dimension = null;

  @SerializedName("gameMode")
  private String gameMode = null;

  @SerializedName("generator")
  private Object generator = null;

  @SerializedName("seed")
  private BigDecimal seed = null;

  @SerializedName("spawn")
  private Vector3 spawn = null;

  @SerializedName("time")
  private BigDecimal time = null;

  @SerializedName("weather")
  private String weather = null;

  public WorldFull border(Object border) {
    this.border = border;
    return this;
  }

   /**
   * Get border
   * @return border
  **/
  @ApiModelProperty(example = "null", value = "")
  public Object getBorder() {
    return border;
  }

  public void setBorder(Object border) {
    this.border = border;
  }

  public WorldFull difficulty(String difficulty) {
    this.difficulty = difficulty;
    return this;
  }

   /**
   * The current difficulty of the world.
   * @return difficulty
  **/
  @ApiModelProperty(example = "null", value = "The current difficulty of the world.")
  public String getDifficulty() {
    return difficulty;
  }

  public void setDifficulty(String difficulty) {
    this.difficulty = difficulty;
  }

  public WorldFull dimension(Object dimension) {
    this.dimension = dimension;
    return this;
  }

   /**
   * Get dimension
   * @return dimension
  **/
  @ApiModelProperty(example = "null", value = "")
  public Object getDimension() {
    return dimension;
  }

  public void setDimension(Object dimension) {
    this.dimension = dimension;
  }

  public WorldFull gameMode(String gameMode) {
    this.gameMode = gameMode;
    return this;
  }

   /**
   * The default game mode of the world.
   * @return gameMode
  **/
  @ApiModelProperty(example = "null", value = "The default game mode of the world.")
  public String getGameMode() {
    return gameMode;
  }

  public void setGameMode(String gameMode) {
    this.gameMode = gameMode;
  }

  public WorldFull generator(Object generator) {
    this.generator = generator;
    return this;
  }

   /**
   * Get generator
   * @return generator
  **/
  @ApiModelProperty(example = "null", value = "")
  public Object getGenerator() {
    return generator;
  }

  public void setGenerator(Object generator) {
    this.generator = generator;
  }

  public WorldFull seed(BigDecimal seed) {
    this.seed = seed;
    return this;
  }

   /**
   * The seed used to generate this world.
   * @return seed
  **/
  @ApiModelProperty(example = "null", value = "The seed used to generate this world.")
  public BigDecimal getSeed() {
    return seed;
  }

  public void setSeed(BigDecimal seed) {
    this.seed = seed;
  }

  public WorldFull spawn(Vector3 spawn) {
    this.spawn = spawn;
    return this;
  }

   /**
   * Get spawn
   * @return spawn
  **/
  @ApiModelProperty(example = "null", value = "")
  public Vector3 getSpawn() {
    return spawn;
  }

  public void setSpawn(Vector3 spawn) {
    this.spawn = spawn;
  }

  public WorldFull time(BigDecimal time) {
    this.time = time;
    return this;
  }

   /**
   * The current in game time.
   * @return time
  **/
  @ApiModelProperty(example = "null", value = "The current in game time.")
  public BigDecimal getTime() {
    return time;
  }

  public void setTime(BigDecimal time) {
    this.time = time;
  }

  public WorldFull weather(String weather) {
    this.weather = weather;
    return this;
  }

   /**
   * The current weather of the world.
   * @return weather
  **/
  @ApiModelProperty(example = "null", value = "The current weather of the world.")
  public String getWeather() {
    return weather;
  }

  public void setWeather(String weather) {
    this.weather = weather;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorldFull worldFull = (WorldFull) o;
    return Objects.equals(this.border, worldFull.border) &&
        Objects.equals(this.difficulty, worldFull.difficulty) &&
        Objects.equals(this.dimension, worldFull.dimension) &&
        Objects.equals(this.gameMode, worldFull.gameMode) &&
        Objects.equals(this.generator, worldFull.generator) &&
        Objects.equals(this.seed, worldFull.seed) &&
        Objects.equals(this.spawn, worldFull.spawn) &&
        Objects.equals(this.time, worldFull.time) &&
        Objects.equals(this.weather, worldFull.weather);
  }

  @Override
  public int hashCode() {
    return Objects.hash(border, difficulty, dimension, gameMode, generator, seed, spawn, time, weather);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorldFull {\n");
    
    sb.append("    border: ").append(toIndentedString(border)).append("\n");
    sb.append("    difficulty: ").append(toIndentedString(difficulty)).append("\n");
    sb.append("    dimension: ").append(toIndentedString(dimension)).append("\n");
    sb.append("    gameMode: ").append(toIndentedString(gameMode)).append("\n");
    sb.append("    generator: ").append(toIndentedString(generator)).append("\n");
    sb.append("    seed: ").append(toIndentedString(seed)).append("\n");
    sb.append("    spawn: ").append(toIndentedString(spawn)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    weather: ").append(toIndentedString(weather)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

