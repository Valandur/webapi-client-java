/*
 * WebAPI
 * Access Sponge powered Minecraft servers through a WebAPI  # Introduction This is the documentation of the various API routes offered by the WebAPI plugin.  This documentation assumes that you are familiar with the basic concepts of Web API's, such as `GET`, `PUT`, `POST` and `DELETE` methods, request `HEADERS` and `RESPONSE CODES` and `JSON` data.  By default this documentation can be found at http:/localhost:8080 (while your minecraft server is running) and the various routes start with http:/localhost:8080/api/...  As a quick test try reaching the route http:/localhost:8080/api/info (remember that you can only access \"localhost\" routes on the server on which you are running minecraft). This route should show you basic information about your server, like the motd and player count.  # Additional data Certain endpoints (such as `/player`, `/entity` and `/tile-entity` have additional properties which are not documented here, because the data depends on the concrete object type (eg. `Sheep` have a wool color, others do not) and on the other plugins/mods that are running on your server which might add additional data.  You can also find more information in the github docs (https:/github.com/Valandur/Web-API/tree/master/docs/DATA.md) 
 *
 * OpenAPI spec version: <version>
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Command;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CommandFull
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-12-10T13:08:53.752+01:00")
public class CommandFull {
  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("link")
  private String link = null;

  @SerializedName("aliases")
  private List<String> aliases = null;

  @SerializedName("usage")
  private String usage = null;

  @SerializedName("help")
  private String help = null;

  public CommandFull name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The main name of the command.
   * @return name
  **/
  @ApiModelProperty(value = "The main name of the command.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CommandFull description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Describes what the command does.
   * @return description
  **/
  @ApiModelProperty(value = "Describes what the command does.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CommandFull link(String link) {
    this.link = link;
    return this;
  }

   /**
   * The API URL which contains detailed information about this command.
   * @return link
  **/
  @ApiModelProperty(value = "The API URL which contains detailed information about this command.")
  public String getLink() {
    return link;
  }

  public void setLink(String link) {
    this.link = link;
  }

  public CommandFull aliases(List<String> aliases) {
    this.aliases = aliases;
    return this;
  }

  public CommandFull addAliasesItem(String aliasesItem) {
    if (this.aliases == null) {
      this.aliases = new ArrayList<String>();
    }
    this.aliases.add(aliasesItem);
    return this;
  }

   /**
   * All the aliases with which the command can be executed.
   * @return aliases
  **/
  @ApiModelProperty(value = "All the aliases with which the command can be executed.")
  public List<String> getAliases() {
    return aliases;
  }

  public void setAliases(List<String> aliases) {
    this.aliases = aliases;
  }

  public CommandFull usage(String usage) {
    this.usage = usage;
    return this;
  }

   /**
   * The usage instructions for the command.
   * @return usage
  **/
  @ApiModelProperty(value = "The usage instructions for the command.")
  public String getUsage() {
    return usage;
  }

  public void setUsage(String usage) {
    this.usage = usage;
  }

  public CommandFull help(String help) {
    this.help = help;
    return this;
  }

   /**
   * More information about the command.
   * @return help
  **/
  @ApiModelProperty(value = "More information about the command.")
  public String getHelp() {
    return help;
  }

  public void setHelp(String help) {
    this.help = help;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommandFull commandFull = (CommandFull) o;
    return Objects.equals(this.name, commandFull.name) &&
        Objects.equals(this.description, commandFull.description) &&
        Objects.equals(this.link, commandFull.link) &&
        Objects.equals(this.aliases, commandFull.aliases) &&
        Objects.equals(this.usage, commandFull.usage) &&
        Objects.equals(this.help, commandFull.help);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, link, aliases, usage, help);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommandFull {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    aliases: ").append(toIndentedString(aliases)).append("\n");
    sb.append("    usage: ").append(toIndentedString(usage)).append("\n");
    sb.append("    help: ").append(toIndentedString(help)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

