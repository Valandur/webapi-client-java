/*
 * WebAPI
 * Access Sponge powered Minecraft servers through a WebAPI  # Introduction This is the documentation of the various API routes offered by the WebAPI plugin.  This documentation assumes that you are familiar with the basic concepts of Web API's, such as `GET`, `PUT`, `POST` and `DELETE` methods, request `HEADERS` and `RESPONSE CODES` and `JSON` data.  By default this documentation can be found at http:/localhost:8080 (while your minecraft server is running) and the various routes start with http:/localhost:8080/api/...  As a quick test try reaching the route http:/localhost:8080/api/info (remember that you can only access \"localhost\" routes on the server on which you are running minecraft). This route should show you basic information about your server, like the motd and player count.  # Additional data Certain endpoints (such as `/player`, `/entity` and `/tile-entity` have additional properties which are not documented here, because the data depends on the concrete object type (eg. `Sheep` have a wool color, others do not) and on the other plugins/mods that are running on your server which might add additional data.  You can also find more information in the github docs (https:/github.com/Valandur/Web-API/tree/master/docs/DATA.md) 
 *
 * OpenAPI spec version: <version>
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CommandResult;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CommandCall
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-01-17T22:13:43.947+01:00")
public class CommandCall {
  @SerializedName("timestamp")
  private String timestamp = null;

  @SerializedName("command")
  private String command = null;

  @SerializedName("args")
  private List<String> args = null;

  @SerializedName("source")
  private Object source = null;

  @SerializedName("result")
  private CommandResult result = null;

  public CommandCall timestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * The timestamp when the message was sent (server time).
   * @return timestamp
  **/
  @ApiModelProperty(value = "The timestamp when the message was sent (server time).")
  public String getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }

  public CommandCall command(String command) {
    this.command = command;
    return this;
  }

   /**
   * The name of the command that was executed.
   * @return command
  **/
  @ApiModelProperty(value = "The name of the command that was executed.")
  public String getCommand() {
    return command;
  }

  public void setCommand(String command) {
    this.command = command;
  }

  public CommandCall args(List<String> args) {
    this.args = args;
    return this;
  }

  public CommandCall addArgsItem(String argsItem) {
    if (this.args == null) {
      this.args = new ArrayList<String>();
    }
    this.args.add(argsItem);
    return this;
  }

   /**
   * The command arguments passed to the command.
   * @return args
  **/
  @ApiModelProperty(value = "The command arguments passed to the command.")
  public List<String> getArgs() {
    return args;
  }

  public void setArgs(List<String> args) {
    this.args = args;
  }

  public CommandCall source(Object source) {
    this.source = source;
    return this;
  }

   /**
   * An object describing the source (executor) of the command. Usually a player or the console.
   * @return source
  **/
  @ApiModelProperty(value = "An object describing the source (executor) of the command. Usually a player or the console.")
  public Object getSource() {
    return source;
  }

  public void setSource(Object source) {
    this.source = source;
  }

  public CommandCall result(CommandResult result) {
    this.result = result;
    return this;
  }

   /**
   * Get result
   * @return result
  **/
  @ApiModelProperty(value = "")
  public CommandResult getResult() {
    return result;
  }

  public void setResult(CommandResult result) {
    this.result = result;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommandCall commandCall = (CommandCall) o;
    return Objects.equals(this.timestamp, commandCall.timestamp) &&
        Objects.equals(this.command, commandCall.command) &&
        Objects.equals(this.args, commandCall.args) &&
        Objects.equals(this.source, commandCall.source) &&
        Objects.equals(this.result, commandCall.result);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timestamp, command, args, source, result);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommandCall {\n");
    
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    command: ").append(toIndentedString(command)).append("\n");
    sb.append("    args: ").append(toIndentedString(args)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

