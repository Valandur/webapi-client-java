/*
 * Web-API
 * Access Sponge powered Minecraft servers through a WebAPI  # Introduction This is the documentation of the various API routes offered by the WebAPI plugin.  This documentation assumes that you are familiar with the basic concepts of Web API's, such as `GET`, `PUT`, `POST` and `DELETE` methods, request `HEADERS` and `RESPONSE CODES` and `JSON` data.  By default this documentation can be found at http:/localhost:8080 (while your minecraft server is running) and the various routes start with http:/localhost:8080/api/v5...  As a quick test try reaching the route http:/localhost:8080/api/v5/info (remember that you can only access \\\"localhost\\\" routes on the server on which you are running minecraft). This route should show you basic information about your server, like the motd and player count.  # List endpoints Lots of objects offer an endpoint to list all objects (e.g. `GET: /world` to get all worlds). These endpoints return only the properties marked 'required' by default, because the list might be quite large. If you want to return ALL data for a list endpoint add the query parameter `details`, (e.g. `GET: /world?details`).  > Remember that in this case the data returned by the endpoint might be quite large.  # Debugging endpoints Apart from the `?details` flag you can also pass some other flags for debugging purposes. Remember that you must include the first query parameter with `?`, and further ones with `&`:  `details`: Includes details for list endpoints  `accept=[json/xml]`: Manually set the accept content type. This is good for browser testing, **BUT DON'T USE THIS IN PRODUCTION, YOU CAN SUPPLY THE `Accepts` HEADER FOR THAT**  `pretty`: Pretty prints the data, also good for debugging in the browser.  An example request might look like this: `http://localhost:8080/api/v5/world?details&accpet=json&pretty&key=MY-API-KEY`  # Additional data Certain endpoints (such as `/player`, `/entity` and `/tile-entity` have additional properties which are not documented here, because the data depends on the concrete object type (eg. `Sheep` have a wool color, others do not) and on the other plugins/mods that are running on your server which might add additional data.  You can also find more information in the github docs (https:/github.com/Valandur/Web-API/tree/master/docs/DATA.md)
 *
 * OpenAPI spec version: 5.4.2-S7.1.0
 * Contact: inithilian@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Cause;
import io.swagger.client.model.CommandResult;
import java.io.IOException;

/**
 * CommandCall
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-23T13:32:53.543+02:00")
public class CommandCall {
  @SerializedName("args")
  private String args = null;

  @SerializedName("cancelled")
  private Boolean cancelled = null;

  @SerializedName("cause")
  private Cause cause = null;

  @SerializedName("command")
  private String command = null;

  @SerializedName("result")
  private CommandResult result = null;

  @SerializedName("timestamp")
  private Long timestamp = null;

  public CommandCall args(String args) {
    this.args = args;
    return this;
  }

   /**
   * The arguments that were passed to the command
   * @return args
  **/
  @ApiModelProperty(required = true, value = "The arguments that were passed to the command")
  public String getArgs() {
    return args;
  }

  public void setArgs(String args) {
    this.args = args;
  }

  public CommandCall cancelled(Boolean cancelled) {
    this.cancelled = cancelled;
    return this;
  }

   /**
   * True if the command was cancelled, false otherwise
   * @return cancelled
  **/
  @ApiModelProperty(required = true, value = "True if the command was cancelled, false otherwise")
  public Boolean isCancelled() {
    return cancelled;
  }

  public void setCancelled(Boolean cancelled) {
    this.cancelled = cancelled;
  }

  public CommandCall cause(Cause cause) {
    this.cause = cause;
    return this;
  }

   /**
   * The cause of the command execution
   * @return cause
  **/
  @ApiModelProperty(required = true, value = "The cause of the command execution")
  public Cause getCause() {
    return cause;
  }

  public void setCause(Cause cause) {
    this.cause = cause;
  }

  public CommandCall command(String command) {
    this.command = command;
    return this;
  }

   /**
   * The command that was executed (without arguments)
   * @return command
  **/
  @ApiModelProperty(required = true, value = "The command that was executed (without arguments)")
  public String getCommand() {
    return command;
  }

  public void setCommand(String command) {
    this.command = command;
  }

  public CommandCall result(CommandResult result) {
    this.result = result;
    return this;
  }

   /**
   * The result of the command execution
   * @return result
  **/
  @ApiModelProperty(required = true, value = "The result of the command execution")
  public CommandResult getResult() {
    return result;
  }

  public void setResult(CommandResult result) {
    this.result = result;
  }

  public CommandCall timestamp(Long timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * The timestamp at which the command was executed (epoch millis)
   * @return timestamp
  **/
  @ApiModelProperty(required = true, value = "The timestamp at which the command was executed (epoch millis)")
  public Long getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Long timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommandCall commandCall = (CommandCall) o;
    return Objects.equals(this.args, commandCall.args) &&
        Objects.equals(this.cancelled, commandCall.cancelled) &&
        Objects.equals(this.cause, commandCall.cause) &&
        Objects.equals(this.command, commandCall.command) &&
        Objects.equals(this.result, commandCall.result) &&
        Objects.equals(this.timestamp, commandCall.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(args, cancelled, cause, command, result, timestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommandCall {\n");
    
    sb.append("    args: ").append(toIndentedString(args)).append("\n");
    sb.append("    cancelled: ").append(toIndentedString(cancelled)).append("\n");
    sb.append("    cause: ").append(toIndentedString(cause)).append("\n");
    sb.append("    command: ").append(toIndentedString(command)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

