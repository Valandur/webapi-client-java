/*
 * Web-API
 * Access Sponge powered Minecraft servers through a WebAPI  # Introduction This is the documentation of the various API routes offered by the WebAPI plugin.  This documentation assumes that you are familiar with the basic concepts of Web API's, such as `GET`, `PUT`, `POST` and `DELETE` methods, request `HEADERS` and `RESPONSE CODES` and `JSON` data.  By default this documentation can be found at http:/localhost:8080 (while your minecraft server is running) and the various routes start with http:/localhost:8080/api/v5...  As a quick test try reaching the route http:/localhost:8080/api/v5/info (remember that you can only access \\\"localhost\\\" routes on the server on which you are running minecraft). This route should show you basic information about your server, like the motd and player count.  # List endpoints Lots of objects offer an endpoint to list all objects (e.g. `GET: /world` to get all worlds). These endpoints return only the properties marked 'required' by default, because the list might be quite large. If you want to return ALL data for a list endpoint add the query parameter `details`, (e.g. `GET: /world?details`).  > Remember that in this case the data returned by the endpoint might be quite large.  # Debugging endpoints Apart from the `?details` flag you can also pass some other flags for debugging purposes. Remember that you must include the first query parameter with `?`, and further ones with `&`:  `details`: Includes details for list endpoints  `accept=[json/xml]`: Manually set the accept content type. This is good for browser testing, **BUT DON'T USE THIS IN PRODUCTION, YOU CAN SUPPLY THE `Accepts` HEADER FOR THAT**  `pretty`: Pretty prints the data, also good for debugging in the browser.  An example request might look like this: `http://localhost:8080/api/v5/world?details&accpet=json&pretty&key=MY-API-KEY`  # Additional data Certain endpoints (such as `/player`, `/entity` and `/tile-entity` have additional properties which are not documented here, because the data depends on the concrete object type (eg. `Sheep` have a wool color, others do not) and on the other plugins/mods that are running on your server which might add additional data.  You can also find more information in the github docs (https:/github.com/Valandur/Web-API/tree/master/docs/DATA.md)
 *
 * OpenAPI spec version: 5.4.2-S7.1.0
 * Contact: inithilian@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.BlockState;
import io.swagger.client.model.Vector3i;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CreateBlockOperationRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-23T12:56:27.838+02:00")
public class CreateBlockOperationRequest {
  @SerializedName("max")
  private Vector3i max = null;

  @SerializedName("min")
  private Vector3i min = null;

  /**
   * The type of the block operation
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    GET("GET"),
    
    CHANGE("CHANGE");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("world")
  private String world = null;

  @SerializedName("block")
  private BlockState block = null;

  @SerializedName("blocks")
  private List<List<List<BlockState>>> blocks = null;

  public CreateBlockOperationRequest max(Vector3i max) {
    this.max = max;
    return this;
  }

   /**
   * The maximum world coordinates spanning the cube where the operation is run
   * @return max
  **/
  @ApiModelProperty(required = true, value = "The maximum world coordinates spanning the cube where the operation is run")
  public Vector3i getMax() {
    return max;
  }

  public void setMax(Vector3i max) {
    this.max = max;
  }

  public CreateBlockOperationRequest min(Vector3i min) {
    this.min = min;
    return this;
  }

   /**
   * The minimum world coordinates spanning the cube where the operation is run
   * @return min
  **/
  @ApiModelProperty(required = true, value = "The minimum world coordinates spanning the cube where the operation is run")
  public Vector3i getMin() {
    return min;
  }

  public void setMin(Vector3i min) {
    this.min = min;
  }

  public CreateBlockOperationRequest type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * The type of the block operation
   * @return type
  **/
  @ApiModelProperty(required = true, value = "The type of the block operation")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public CreateBlockOperationRequest world(String world) {
    this.world = world;
    return this;
  }

   /**
   * The world that the operation is run in
   * @return world
  **/
  @ApiModelProperty(required = true, value = "The world that the operation is run in")
  public String getWorld() {
    return world;
  }

  public void setWorld(String world) {
    this.world = world;
  }

  public CreateBlockOperationRequest block(BlockState block) {
    this.block = block;
    return this;
  }

   /**
   * The block that we want to change all other blocks into (when using an UPDATE operation
   * @return block
  **/
  @ApiModelProperty(value = "The block that we want to change all other blocks into (when using an UPDATE operation")
  public BlockState getBlock() {
    return block;
  }

  public void setBlock(BlockState block) {
    this.block = block;
  }

  public CreateBlockOperationRequest blocks(List<List<List<BlockState>>> blocks) {
    this.blocks = blocks;
    return this;
  }

  public CreateBlockOperationRequest addBlocksItem(List<List<BlockState>> blocksItem) {
    if (this.blocks == null) {
      this.blocks = new ArrayList<List<List<BlockState>>>();
    }
    this.blocks.add(blocksItem);
    return this;
  }

   /**
   * An array of blocks defining what each block in the spanned cube
   * @return blocks
  **/
  @ApiModelProperty(value = "An array of blocks defining what each block in the spanned cube")
  public List<List<List<BlockState>>> getBlocks() {
    return blocks;
  }

  public void setBlocks(List<List<List<BlockState>>> blocks) {
    this.blocks = blocks;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateBlockOperationRequest createBlockOperationRequest = (CreateBlockOperationRequest) o;
    return Objects.equals(this.max, createBlockOperationRequest.max) &&
        Objects.equals(this.min, createBlockOperationRequest.min) &&
        Objects.equals(this.type, createBlockOperationRequest.type) &&
        Objects.equals(this.world, createBlockOperationRequest.world) &&
        Objects.equals(this.block, createBlockOperationRequest.block) &&
        Objects.equals(this.blocks, createBlockOperationRequest.blocks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(max, min, type, world, block, blocks);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateBlockOperationRequest {\n");
    
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("    min: ").append(toIndentedString(min)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    world: ").append(toIndentedString(world)).append("\n");
    sb.append("    block: ").append(toIndentedString(block)).append("\n");
    sb.append("    blocks: ").append(toIndentedString(blocks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

