/*
 * Web-API
 * Access Sponge powered Minecraft servers through a WebAPI  # Introduction This is the documentation of the various API routes offered by the WebAPI plugin.  This documentation assumes that you are familiar with the basic concepts of Web API's, such as `GET`, `PUT`, `POST` and `DELETE` methods, request `HEADERS` and `RESPONSE CODES` and `JSON` data.  By default this documentation can be found at http:/localhost:8080 (while your minecraft server is running) and the various routes start with http:/localhost:8080/api/v5...  As a quick test try reaching the route http:/localhost:8080/api/v5/info (remember that you can only access \\\"localhost\\\" routes on the server on which you are running minecraft). This route should show you basic information about your server, like the motd and player count.  # List endpoints Lots of objects offer an endpoint to list all objects (e.g. `GET: /world` to get all worlds). These endpoints return only the properties marked 'required' by default, because the list might be quite large. If you want to return ALL data for a list endpoint add the query parameter `details`, (e.g. `GET: /world?details`).  > Remember that in this case the data returned by the endpoint might be quite large.  # Debugging endpoints Apart from the `?details` flag you can also pass some other flags for debugging purposes. Remember that you must include the first query parameter with `?`, and further ones with `&`:  `details`: Includes details for list endpoints  `accept=[json/xml]`: Manually set the accept content type. This is good for browser testing, **BUT DON'T USE THIS IN PRODUCTION, YOU CAN SUPPLY THE `Accepts` HEADER FOR THAT**  `pretty`: Pretty prints the data, also good for debugging in the browser.  An example request might look like this: `http://localhost:8080/api/v5/world?details&accpet=json&pretty&key=MY-API-KEY`  # Additional data Certain endpoints (such as `/player`, `/entity` and `/tile-entity` have additional properties which are not documented here, because the data depends on the concrete object type (eg. `Sheep` have a wool color, others do not) and on the other plugins/mods that are running on your server which might add additional data.  You can also find more information in the github docs (https:/github.com/Valandur/Web-API/tree/master/docs/DATA.md)
 *
 * OpenAPI spec version: 5.4.2-S7.1.0
 * Contact: inithilian@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CatalogTypeEntityType;
import io.swagger.client.model.Location;
import io.swagger.client.model.VillagerShopsStockItem;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * VillagerShopsShop
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-23T12:56:27.838+02:00")
public class VillagerShopsShop {
  @SerializedName("entityType")
  private CatalogTypeEntityType entityType = null;

  @SerializedName("link")
  private String link = null;

  @SerializedName("entityVariant")
  private String entityVariant = null;

  @SerializedName("location")
  private Location location = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("owner")
  private UUID owner = null;

  @SerializedName("rotation")
  private Double rotation = null;

  @SerializedName("stockContainer")
  private Location stockContainer = null;

  @SerializedName("stockItems")
  private List<VillagerShopsStockItem> stockItems = null;

  @SerializedName("uid")
  private UUID uid = null;

  public VillagerShopsShop entityType(CatalogTypeEntityType entityType) {
    this.entityType = entityType;
    return this;
  }

   /**
   * The minecraft entity type string for this shops visual entity
   * @return entityType
  **/
  @ApiModelProperty(required = true, value = "The minecraft entity type string for this shops visual entity")
  public CatalogTypeEntityType getEntityType() {
    return entityType;
  }

  public void setEntityType(CatalogTypeEntityType entityType) {
    this.entityType = entityType;
  }

   /**
   * The API link that can be used to obtain more information about this object
   * @return link
  **/
  @ApiModelProperty(required = true, value = "The API link that can be used to obtain more information about this object")
  public String getLink() {
    return link;
  }

  public VillagerShopsShop entityVariant(String entityVariant) {
    this.entityVariant = entityVariant;
    return this;
  }

   /**
   * A very dynamic variant string for vanilla mobs, most variants as in the minecraft wiki should be supported
   * @return entityVariant
  **/
  @ApiModelProperty(example = "butcher", value = "A very dynamic variant string for vanilla mobs, most variants as in the minecraft wiki should be supported")
  public String getEntityVariant() {
    return entityVariant;
  }

  public void setEntityVariant(String entityVariant) {
    this.entityVariant = entityVariant;
  }

  public VillagerShopsShop location(Location location) {
    this.location = location;
    return this;
  }

   /**
   * Where the shop is currently located
   * @return location
  **/
  @ApiModelProperty(value = "Where the shop is currently located")
  public Location getLocation() {
    return location;
  }

  public void setLocation(Location location) {
    this.location = location;
  }

  public VillagerShopsShop name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The escaped shop name
   * @return name
  **/
  @ApiModelProperty(value = "The escaped shop name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public VillagerShopsShop owner(UUID owner) {
    this.owner = owner;
    return this;
  }

   /**
   * If this shop is a player shop this conatins the UUID of this shops owner. Omitting this field or setting it to null will remove the player-shop association.
   * @return owner
  **/
  @ApiModelProperty(value = "If this shop is a player shop this conatins the UUID of this shops owner. Omitting this field or setting it to null will remove the player-shop association.")
  public UUID getOwner() {
    return owner;
  }

  public void setOwner(UUID owner) {
    this.owner = owner;
  }

  public VillagerShopsShop rotation(Double rotation) {
    this.rotation = rotation;
    return this;
  }

   /**
   * The mobs roations around their up-axis
   * @return rotation
  **/
  @ApiModelProperty(value = "The mobs roations around their up-axis")
  public Double getRotation() {
    return rotation;
  }

  public void setRotation(Double rotation) {
    this.rotation = rotation;
  }

  public VillagerShopsShop stockContainer(Location stockContainer) {
    this.stockContainer = stockContainer;
    return this;
  }

   /**
   * Location where a container should reside for stocking items. Omitting this field or setting it to null will remove the stock container. Having a player-shop without container is undefined behaviour!
   * @return stockContainer
  **/
  @ApiModelProperty(value = "Location where a container should reside for stocking items. Omitting this field or setting it to null will remove the stock container. Having a player-shop without container is undefined behaviour!")
  public Location getStockContainer() {
    return stockContainer;
  }

  public void setStockContainer(Location stockContainer) {
    this.stockContainer = stockContainer;
  }

  public VillagerShopsShop stockItems(List<VillagerShopsStockItem> stockItems) {
    this.stockItems = stockItems;
    return this;
  }

  public VillagerShopsShop addStockItemsItem(VillagerShopsStockItem stockItemsItem) {
    if (this.stockItems == null) {
      this.stockItems = new ArrayList<VillagerShopsStockItem>();
    }
    this.stockItems.add(stockItemsItem);
    return this;
  }

   /**
   * Returns a list of all stock items currently listed. This property is read only.
   * @return stockItems
  **/
  @ApiModelProperty(value = "Returns a list of all stock items currently listed. This property is read only.")
  public List<VillagerShopsStockItem> getStockItems() {
    return stockItems;
  }

  public void setStockItems(List<VillagerShopsStockItem> stockItems) {
    this.stockItems = stockItems;
  }

  public VillagerShopsShop uid(UUID uid) {
    this.uid = uid;
    return this;
  }

   /**
   * The unique shop identifier; this is not the mob uuid
   * @return uid
  **/
  @ApiModelProperty(value = "The unique shop identifier; this is not the mob uuid")
  public UUID getUid() {
    return uid;
  }

  public void setUid(UUID uid) {
    this.uid = uid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VillagerShopsShop villagerShopsShop = (VillagerShopsShop) o;
    return Objects.equals(this.entityType, villagerShopsShop.entityType) &&
        Objects.equals(this.link, villagerShopsShop.link) &&
        Objects.equals(this.entityVariant, villagerShopsShop.entityVariant) &&
        Objects.equals(this.location, villagerShopsShop.location) &&
        Objects.equals(this.name, villagerShopsShop.name) &&
        Objects.equals(this.owner, villagerShopsShop.owner) &&
        Objects.equals(this.rotation, villagerShopsShop.rotation) &&
        Objects.equals(this.stockContainer, villagerShopsShop.stockContainer) &&
        Objects.equals(this.stockItems, villagerShopsShop.stockItems) &&
        Objects.equals(this.uid, villagerShopsShop.uid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityType, link, entityVariant, location, name, owner, rotation, stockContainer, stockItems, uid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VillagerShopsShop {\n");
    
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    entityVariant: ").append(toIndentedString(entityVariant)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    rotation: ").append(toIndentedString(rotation)).append("\n");
    sb.append("    stockContainer: ").append(toIndentedString(stockContainer)).append("\n");
    sb.append("    stockItems: ").append(toIndentedString(stockItems)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

