/*
 * Web-API
 * Access Sponge powered Minecraft servers through a WebAPI  # Introduction This is the documentation of the various API routes offered by the WebAPI plugin.  This documentation assumes that you are familiar with the basic concepts of Web API's, such as `GET`, `PUT`, `POST` and `DELETE` methods, request `HEADERS` and `RESPONSE CODES` and `JSON` data.  By default this documentation can be found at http:/localhost:8080 (while your minecraft server is running) and the various routes start with http:/localhost:8080/api/v5...  As a quick test try reaching the route http:/localhost:8080/api/v5/info (remember that you can only access \\\"localhost\\\" routes on the server on which you are running minecraft). This route should show you basic information about your server, like the motd and player count.  # List endpoints Lots of objects offer an endpoint to list all objects (e.g. `GET: /world` to get all worlds). These endpoints return only the properties marked 'required' by default, because the list might be quite large. If you want to return ALL data for a list endpoint add the query parameter `details`, (e.g. `GET: /world?details`).  > Remember that in this case the data returned by the endpoint might be quite large.  # Debugging endpoints Apart from the `?details` flag you can also pass some other flags for debugging purposes. Remember that you must include the first query parameter with `?`, and further ones with `&`:  `details`: Includes details for list endpoints  `accept=[json/xml]`: Manually set the accept content type. This is good for browser testing, **BUT DON'T USE THIS IN PRODUCTION, YOU CAN SUPPLY THE `Accepts` HEADER FOR THAT**  `pretty`: Pretty prints the data, also good for debugging in the browser.  An example request might look like this: `http://localhost:8080/api/v5/world?details&accpet=json&pretty&key=MY-API-KEY`  # Additional data Certain endpoints (such as `/player`, `/entity` and `/tile-entity` have additional properties which are not documented here, because the data depends on the concrete object type (eg. `Sheep` have a wool color, others do not) and on the other plugins/mods that are running on your server which might add additional data.  You can also find more information in the github docs (https:/github.com/Valandur/Web-API/tree/master/docs/DATA.md)
 *
 * OpenAPI spec version: @version@
 * Contact: inithilian@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Location;
import io.swagger.client.model.Player;
import io.swagger.client.model.Vector3d;
import io.swagger.client.model.World;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * RedProtectRegion
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-14T13:42:56.227+02:00")
public class RedProtectRegion {
  @SerializedName("id")
  private String id = null;

  @SerializedName("link")
  private String link = null;

  @SerializedName("max")
  private Vector3d max = null;

  @SerializedName("min")
  private Vector3d min = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("world")
  private World world = null;

  @SerializedName("admins")
  private List<Player> admins = null;

  @SerializedName("canDelete")
  private Boolean canDelete = null;

  @SerializedName("date")
  private String date = null;

  @SerializedName("flags")
  private Map<String, Object> flags = null;

  @SerializedName("leaders")
  private List<Player> leaders = null;

  @SerializedName("members")
  private List<Player> members = null;

  @SerializedName("priority")
  private Integer priority = null;

  @SerializedName("tpPoint")
  private Location tpPoint = null;

  @SerializedName("welcomeMessage")
  private String welcomeMessage = null;

  public RedProtectRegion id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The unique id of this region
   * @return id
  **/
  @ApiModelProperty(required = true, value = "The unique id of this region")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

   /**
   * The API link that can be used to obtain more information about this object
   * @return link
  **/
  @ApiModelProperty(required = true, value = "The API link that can be used to obtain more information about this object")
  public String getLink() {
    return link;
  }

  public RedProtectRegion max(Vector3d max) {
    this.max = max;
    return this;
  }

   /**
   * The maximum coordinates that define the region
   * @return max
  **/
  @ApiModelProperty(required = true, value = "The maximum coordinates that define the region")
  public Vector3d getMax() {
    return max;
  }

  public void setMax(Vector3d max) {
    this.max = max;
  }

  public RedProtectRegion min(Vector3d min) {
    this.min = min;
    return this;
  }

   /**
   * The minimum coordinates that define the region
   * @return min
  **/
  @ApiModelProperty(required = true, value = "The minimum coordinates that define the region")
  public Vector3d getMin() {
    return min;
  }

  public void setMin(Vector3d min) {
    this.min = min;
  }

  public RedProtectRegion name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of this region
   * @return name
  **/
  @ApiModelProperty(required = true, value = "The name of this region")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public RedProtectRegion world(World world) {
    this.world = world;
    return this;
  }

   /**
   * The world this region is located in
   * @return world
  **/
  @ApiModelProperty(required = true, value = "The world this region is located in")
  public World getWorld() {
    return world;
  }

  public void setWorld(World world) {
    this.world = world;
  }

  public RedProtectRegion admins(List<Player> admins) {
    this.admins = admins;
    return this;
  }

  public RedProtectRegion addAdminsItem(Player adminsItem) {
    if (this.admins == null) {
      this.admins = new ArrayList<Player>();
    }
    this.admins.add(adminsItem);
    return this;
  }

   /**
   * A list of players that are admins of this region
   * @return admins
  **/
  @ApiModelProperty(value = "A list of players that are admins of this region")
  public List<Player> getAdmins() {
    return admins;
  }

  public void setAdmins(List<Player> admins) {
    this.admins = admins;
  }

  public RedProtectRegion canDelete(Boolean canDelete) {
    this.canDelete = canDelete;
    return this;
  }

   /**
   * True if this region can be deleted, false otherwise
   * @return canDelete
  **/
  @ApiModelProperty(value = "True if this region can be deleted, false otherwise")
  public Boolean isCanDelete() {
    return canDelete;
  }

  public void setCanDelete(Boolean canDelete) {
    this.canDelete = canDelete;
  }

  public RedProtectRegion date(String date) {
    this.date = date;
    return this;
  }

   /**
   * The date this region was created?
   * @return date
  **/
  @ApiModelProperty(value = "The date this region was created?")
  public String getDate() {
    return date;
  }

  public void setDate(String date) {
    this.date = date;
  }

  public RedProtectRegion flags(Map<String, Object> flags) {
    this.flags = flags;
    return this;
  }

  public RedProtectRegion putFlagsItem(String key, Object flagsItem) {
    if (this.flags == null) {
      this.flags = new HashMap<String, Object>();
    }
    this.flags.put(key, flagsItem);
    return this;
  }

   /**
   * A map of flags applicable to this region
   * @return flags
  **/
  @ApiModelProperty(value = "A map of flags applicable to this region")
  public Map<String, Object> getFlags() {
    return flags;
  }

  public void setFlags(Map<String, Object> flags) {
    this.flags = flags;
  }

  public RedProtectRegion leaders(List<Player> leaders) {
    this.leaders = leaders;
    return this;
  }

  public RedProtectRegion addLeadersItem(Player leadersItem) {
    if (this.leaders == null) {
      this.leaders = new ArrayList<Player>();
    }
    this.leaders.add(leadersItem);
    return this;
  }

   /**
   * A list of players that are leaders of this region
   * @return leaders
  **/
  @ApiModelProperty(value = "A list of players that are leaders of this region")
  public List<Player> getLeaders() {
    return leaders;
  }

  public void setLeaders(List<Player> leaders) {
    this.leaders = leaders;
  }

  public RedProtectRegion members(List<Player> members) {
    this.members = members;
    return this;
  }

  public RedProtectRegion addMembersItem(Player membersItem) {
    if (this.members == null) {
      this.members = new ArrayList<Player>();
    }
    this.members.add(membersItem);
    return this;
  }

   /**
   * A list of players that are members of this region
   * @return members
  **/
  @ApiModelProperty(value = "A list of players that are members of this region")
  public List<Player> getMembers() {
    return members;
  }

  public void setMembers(List<Player> members) {
    this.members = members;
  }

  public RedProtectRegion priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * The priority of this region compared to other regions
   * @return priority
  **/
  @ApiModelProperty(value = "The priority of this region compared to other regions")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public RedProtectRegion tpPoint(Location tpPoint) {
    this.tpPoint = tpPoint;
    return this;
  }

   /**
   * The teleport point for this region
   * @return tpPoint
  **/
  @ApiModelProperty(value = "The teleport point for this region")
  public Location getTpPoint() {
    return tpPoint;
  }

  public void setTpPoint(Location tpPoint) {
    this.tpPoint = tpPoint;
  }

  public RedProtectRegion welcomeMessage(String welcomeMessage) {
    this.welcomeMessage = welcomeMessage;
    return this;
  }

   /**
   * The welcome message displayed to a player when they enter this region
   * @return welcomeMessage
  **/
  @ApiModelProperty(value = "The welcome message displayed to a player when they enter this region")
  public String getWelcomeMessage() {
    return welcomeMessage;
  }

  public void setWelcomeMessage(String welcomeMessage) {
    this.welcomeMessage = welcomeMessage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RedProtectRegion redProtectRegion = (RedProtectRegion) o;
    return Objects.equals(this.id, redProtectRegion.id) &&
        Objects.equals(this.link, redProtectRegion.link) &&
        Objects.equals(this.max, redProtectRegion.max) &&
        Objects.equals(this.min, redProtectRegion.min) &&
        Objects.equals(this.name, redProtectRegion.name) &&
        Objects.equals(this.world, redProtectRegion.world) &&
        Objects.equals(this.admins, redProtectRegion.admins) &&
        Objects.equals(this.canDelete, redProtectRegion.canDelete) &&
        Objects.equals(this.date, redProtectRegion.date) &&
        Objects.equals(this.flags, redProtectRegion.flags) &&
        Objects.equals(this.leaders, redProtectRegion.leaders) &&
        Objects.equals(this.members, redProtectRegion.members) &&
        Objects.equals(this.priority, redProtectRegion.priority) &&
        Objects.equals(this.tpPoint, redProtectRegion.tpPoint) &&
        Objects.equals(this.welcomeMessage, redProtectRegion.welcomeMessage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, link, max, min, name, world, admins, canDelete, date, flags, leaders, members, priority, tpPoint, welcomeMessage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RedProtectRegion {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("    min: ").append(toIndentedString(min)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    world: ").append(toIndentedString(world)).append("\n");
    sb.append("    admins: ").append(toIndentedString(admins)).append("\n");
    sb.append("    canDelete: ").append(toIndentedString(canDelete)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    flags: ").append(toIndentedString(flags)).append("\n");
    sb.append("    leaders: ").append(toIndentedString(leaders)).append("\n");
    sb.append("    members: ").append(toIndentedString(members)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    tpPoint: ").append(toIndentedString(tpPoint)).append("\n");
    sb.append("    welcomeMessage: ").append(toIndentedString(welcomeMessage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

