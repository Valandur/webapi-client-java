/*
 * WebAPI
 * Access Sponge powered Minecraft servers through a WebAPI  #/ Introduction This is the documentation of the various API routes offered by the WebAPI plugin.  This documentation assumes that you are familiar with the basic concepts of Web API's, such as `GET`, `PUT`, `POST` and `DELETE` methods, request `HEADERS` and `RESPONSE CODES` and `JSON` data.  By default this documentation can be found at http:/localhost:8080 (while your minecraft server is running) and the various routes start with http:/localhost:8080/api/...  As a quick test try reaching the route http:/localhost:8080/api/info (remember that you can only access \"localhost\" routes on the server on which you are running minecraft). This route should show you basic information about your server, like the motd and player count.  #/ Additional data Certain endpoints (such as `/player`, `/entity` and `/tile-entity` have additional properties which are not documented here, because the data depends on the concrete object type (eg. `Sheep` have a wool color, others do not) and on the other plugins/mods that are running on your server which might add additional data.  You can also find more information in the github docs (https:/github.com/Valandur/Web-API/tree/master/docs/DATA.md) 
 *
 * OpenAPI spec version: <version>
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Information about the Game/API/Implementation running on the server.
 */
@ApiModel(description = "Information about the Game/API/Implementation running on the server.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-09T13:12:20.507+02:00")
public class ServerInfoDetail {
  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("version")
  private String version = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("authors")
  private List<String> authors = null;

  public ServerInfoDetail id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The unique id of the api.
   * @return id
  **/
  @ApiModelProperty(value = "The unique id of the api.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ServerInfoDetail name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the api.
   * @return name
  **/
  @ApiModelProperty(value = "The name of the api.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ServerInfoDetail version(String version) {
    this.version = version;
    return this;
  }

   /**
   * The version of the api.
   * @return version
  **/
  @ApiModelProperty(value = "The version of the api.")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public ServerInfoDetail description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description of the api.
   * @return description
  **/
  @ApiModelProperty(value = "The description of the api.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ServerInfoDetail url(String url) {
    this.url = url;
    return this;
  }

   /**
   * The website of the api.
   * @return url
  **/
  @ApiModelProperty(value = "The website of the api.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public ServerInfoDetail authors(List<String> authors) {
    this.authors = authors;
    return this;
  }

  public ServerInfoDetail addAuthorsItem(String authorsItem) {
    if (this.authors == null) {
      this.authors = new ArrayList<String>();
    }
    this.authors.add(authorsItem);
    return this;
  }

   /**
   * The list of authors that worked on the api.
   * @return authors
  **/
  @ApiModelProperty(value = "The list of authors that worked on the api.")
  public List<String> getAuthors() {
    return authors;
  }

  public void setAuthors(List<String> authors) {
    this.authors = authors;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServerInfoDetail serverInfoDetail = (ServerInfoDetail) o;
    return Objects.equals(this.id, serverInfoDetail.id) &&
        Objects.equals(this.name, serverInfoDetail.name) &&
        Objects.equals(this.version, serverInfoDetail.version) &&
        Objects.equals(this.description, serverInfoDetail.description) &&
        Objects.equals(this.url, serverInfoDetail.url) &&
        Objects.equals(this.authors, serverInfoDetail.authors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, version, description, url, authors);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServerInfoDetail {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    authors: ").append(toIndentedString(authors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

